<Addin id="FSharpBinding" namespace="MonoDevelop" name="F# Language Binding"
       author="F# Software Foundation (fsharp.org)" copyright="F# Software Foundation (fsharp.org)" url="http://github.com/fsharp/fsharpbinding"
       description="F# Language Binding (for Xamarin Studio/MonoDevelop INSERT_FSPROJ_MDVERSION4). Install F# before using, see http://fsharp.org" category="Language bindings" version="INSERT_FSPROJ_VERSION">

  <Runtime>
    <Import file="FSharp.Core.dll" />
    <Import file="FSharp.CompilerBinding.dll" />
    <Import assembly="FSharpBinding.dll" />
    <Import assembly="FSharpBinding.Gui.dll" />
    <Import file="FSharp.Compiler.Service.dll" />
    <Import assembly="FantomasLib.dll" />
    <Import assembly="FSharp.Compiler.CodeDom.dll" />
    <Import assembly="ExtCore.dll" />

  <!--INSTALL_DEBUG
    <Import file = "FSharp.CompilerBinding.dll.mdb" />
    <Import file = "FSharpBinding.dll.mdb" />
    <Import file = "FSharpBinding.Gui.dll.mdb" />
  INSTALL_DEBUG-->

    <Import file = "Templates/EmptyFSharpSource.xft.xml" />
    <Import file = "Templates/EmptyFSharpScript.xft.xml" />
    <Import file = "Templates/EmptyFSharpSignature.xft.xml" />
    <Import file = "Templates/FSharpConsoleProject.xpt.xml" />
    <Import file = "Templates/FSharpLibraryProject.xpt.xml" />
    <Import file = "Templates/FSharpTutorialProject.xpt.xml" />
    <Import file = "Templates/FSharpGtkProject.xpt.xml" />
    <Import file = "Templates/AssemblyInfo.xft.xml" />
    <Import file = "Templates/FSharpNUnitLibraryProject.xpt.xml" />
    <Import file = "Templates/FSharpNUnitTestType.xft.xml" />

    <!-- Code templates -->
    <Import file = "Templates/FSharp-templates.xml" />

  </Runtime>

  <Dependencies>
    <Addin id="Core" version="INSERT_FSPROJ_MDVERSION4"/>
    <Addin id="Ide" version="INSERT_FSPROJ_MDVERSION4"/>
    <Addin id="SourceEditor2" version="INSERT_FSPROJ_MDVERSION4"/>
    <Addin id="Refactoring" version="INSERT_FSPROJ_MDVERSION4"/>
    <Addin id="NUnit" version="INSERT_FSPROJ_MDVERSION4"/>

  </Dependencies>

  <!-- This updates the old guid to the new one on saving the project -->
  <Extension path = "/MonoDevelop/ProjectModel/MSBuildExtensions">
    <Class class="MonoDevelop.FSharp.CorrectGuidMSBuildExtension"/>
  </Extension>

  <!-- By default projects use the F# 3.1 targets file unless only 3.0 is available on the machine. -->
  <!-- New projects will be created with this targets file. -->
  <Extension path="/MonoDevelop/ProjectModel/MSBuildItemTypes">
    <!--  If FSharp 3.1 is available, use it. Note XS looks for the first DotNetProject node under 'Extension' -->
	<Condition id="MSBuildTargetIsAvailable" target="$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.1\Framework\v4.0\Microsoft.FSharp.Targets" >
      <DotNetProject language="F#" extension="fsproj" guid="{f2a71f9b-5d33-465a-a702-920d77279786}" import="$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.1\Framework\v4.0\Microsoft.FSharp.Targets"  resourceHandler="MonoDevelop.FSharp.FSharpResourceIdBuilder"/>
	</Condition>

    <!--  If FSharp 3.1 is not available, then use FSharp 3.0  -->
    <DotNetProject language="F#" extension="fsproj" guid="{f2a71f9b-5d33-465a-a702-920d77279786}" import="$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.FSharp.Targets"  resourceHandler="MonoDevelop.FSharp.FSharpResourceIdBuilder"/>
  </Extension>

  <Extension path = "/MonoDevelop/Refactoring/CodeActionSource">
    <Source class ="MonoDevelop.FSharp.NRefactoryCodeActionSource"/>
  </Extension>

  <Extension path="/MonoDevelop/Ide/GlobalOptionsDialog/Other">
    <Section id="FSharpSettings" _label="F# Settings" class = "MonoDevelop.FSharp.FSharpSettingsPanel" />
  </Extension>

  <Extension path="/MonoDevelop/TypeSystem/Parser">
    <Parser class="MonoDevelop.FSharp.FSharpParser"  mimeType = "text/x-fsharp" />
  </Extension>

  <Extension path = "/MonoDevelop/TypeSystem/FoldingParser">
    <Parser class = "MonoDevelop.FSharp.FSharpFoldingParser" mimeType="text/x-fsharp" />
  </Extension>

  <Extension path = "/MonoDevelop/SourceEditor2/TooltipProviders">
    <Class id="LanguageItem" class="MonoDevelop.FSharp.FSharpTooltipProvider" mimeType="text/x-fsharp" />
  </Extension>

  <Extension path="/MonoDevelop/Ide/TextEditorResolver">
    <Resolver class="MonoDevelop.FSharp.FSharpResolverProvider" mimeType="text/x-fsharp" />
  </Extension>

  <Extension path="/MonoDevelop/Ide/FileFilters">
    <FileFilter id="F#" insertbefore="AllFiles" _label="F# Source Files" extensions="*.fs;*.fsi;*.fsx;*.fsscript"/>
  </Extension>

  <Extension path = "/MonoDevelop/Ide/FileTemplateTypes">
    <FileTemplateType name = "UnformattedFile" class = "MonoDevelop.FSharp.UnformattedTextFileDescriptionTemplate"/>
  </Extension>

  <Extension path="/MonoDevelop/Ide/FileTemplates">
    <FileTemplate id="EmptyFSharpSource" file="Templates/EmptyFSharpSource.xft.xml"/>
    <FileTemplate id="EmptyFSharpScript" file="Templates/EmptyFSharpScript.xft.xml"/>
    <FileTemplate id="EmptyFSharpSignature" file="Templates/EmptyFSharpSignature.xft.xml"/>
    <FileTemplate id="FSharpAssemblyInfo" file="Templates/AssemblyInfo.xft.xml" />
    <FileTemplate id="FSharpNUnitTestType" file="Templates/FSharpNUnitTestType.xft.xml" />
  </Extension>

  <Extension path="/MonoDevelop/Ide/ProjectTemplates">
    <ProjectTemplate id="FSharpConsoleProject" file="Templates/FSharpConsoleProject.xpt.xml"/>
    <ProjectTemplate id="FSharpLibraryProject" file="Templates/FSharpLibraryProject.xpt.xml"/>
    <!-- Only include the tutorial project if an F# 3.0 or 3.1 target is available as this includes F# 3.0 specific features -->
	<ComplexCondition>
		<Or>
			<Condition id="MSBuildTargetIsAvailable" target="$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.FSharp.Targets" />
			<Condition id="MSBuildTargetIsAvailable" target="$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.1\Framework\v4.0\Microsoft.FSharp.Targets" />
		</Or>
		<ProjectTemplate id="FSharpTutorialProject" file="Templates/FSharpTutorialProject.xpt.xml"/>
	</ComplexCondition>

    <ProjectTemplate id="FSharpGtkProject" file="Templates/FSharpGtkProject.xpt.xml"/>
    <ProjectTemplate id="FSharpNUnitLibraryProject" file="Templates/FSharpNUnitLibraryProject.xpt.xml"/>
  </Extension>

  <Extension path = "/MonoDevelop/ProjectModel/SerializableClasses">
    <DataType class = "MonoDevelop.FSharp.FSharpCompilerParameters" />
    <DataType class = "MonoDevelop.FSharp.FSharpProjectParameters" />
  </Extension>

  <Extension path = "/MonoDevelop/ProjectModel/Gui/ItemOptionPanels/Build/Compiler">
    <Condition id="ActiveLanguage" value="F#">
      <Panel id = "FSharpCodeGenerationPanel" _label = "Compiler" class = "MonoDevelop.FSharp.CodeGenerationPanel"/>
    </Condition>
  </Extension>

  <Extension path="/MonoDevelop/Core/MimeTypes">
    <MimeType id="text/x-fsharp" _description="F# Source File" icon="md-file-source" isText="true">
      <File pattern="*.fs" />
    </MimeType>
    <MimeType id="text/x-fsharp" _description="F# Script File" icon="md-file-source" isText="true">
      <File pattern="*.fsx" />
      <File pattern="*.fsscript" />
        </MimeType>
    <MimeType id="text/x-fsharp" _description="F# Signature File" icon="md-file-header" isText="true">
      <File pattern="*.fsi" />
        </MimeType>
    <MimeType id="application/fsproject+xml" _description="F# project file" baseType="application/xml">
      <File pattern="*.fsproj" />
    </MimeType>
  </Extension>

  <Extension path="/MonoDevelop/ProjectModel/LanguageBindings">
    <LanguageBinding id="F#" supportedextensions=".fs,.fsi,.fsx,.fsscript"
                     class="MonoDevelop.FSharp.FSharpLanguageBinding" />
  </Extension>

  <Extension path = "/MonoDevelop/Ide/ReferenceFinder">
    <ReferenceFinder supportedmimetypes = "text/x-fsharp"
                     class = "MonoDevelop.FSharp.FSharpReferenceFinder" />
  </Extension>

  <Extension path = "/MonoDevelop/Ide/CodeFormatters">
    <Formatter mimeType="text/x-fsharp" class="MonoDevelop.FSharp.FSharpFormatter" />
  </Extension>

  <Extension path = "/MonoDevelop/ProjectModel/PolicySets/Mono" >
    <Policies resource="FSharpStylePolicy.xml" />
  </Extension>

  <Policies resource="FSharpFormattingPolicy.xml" />

  <Extension path = "/MonoDevelop/ProjectModel/Gui/MimeTypePolicyPanels">
    <Panel id = "FSharpFormatting" _label = "F# Formatting" mimeType="text/x-fsharp" class = "MonoDevelop.FSharp.FSharpFormattingPolicyPanel" />
  </Extension>

  <Extension path = "/MonoDevelop/Ide/TextEditorExtensions">
    <Class fileExtensions=".fs,.fsi,.fsx,.fsscript" class="MonoDevelop.FSharp.FSharpTextEditorCompletion" />
    <Class fileExtensions = ".fs,.fsx" class = "MonoDevelop.FSharp.FSharpPathExtension" />
    <Class fileExtensions = ".fs,.fsx" class = "MonoDevelop.FSharp.HighlightUsagesExtension" />
    <Class fileExtensions = ".fs" class = "MonoDevelop.FSharp.FSharpUnitTestTextEditorExtension" />
  </Extension>

  <Extension path = "/MonoDevelop/ProjectModel/ProjectServiceExtensions">
    <Class class = "MonoDevelop.FSharp.FSharpProjectServiceExtension" />
  </Extension>

  <Extension path = "/MonoDevelop/Ide/CodeTemplates">
    <CodeTemplate file="Templates/FSharp-templates.xml" />
  </Extension>

  <Extension path = "/MonoDevelop/TypeSystem/OutputTracking">
     <Track languageName = "F#"/>
  </Extension>

  <!-- F# interactive -->

  <Extension path="/MonoDevelop/Ide/Pads">
    <ComplexCondition>
      <Or>
        <Condition id="MSBuildTargetIsAvailable" target="$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.FSharp.Targets" />
        <Condition id="MSBuildTargetIsAvailable" target="$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.1\Framework\v4.0\Microsoft.FSharp.Targets" />
      </Or>
      <Pad id="MonoDevelop.FSharp.FSharpInteractivePad" defaultPlacement="Bottom" _label="F# Interactive" icon="md-project" class="MonoDevelop.FSharp.FSharpInteractivePad" />
    </ComplexCondition>
  </Extension>

  <Extension path = "/MonoDevelop/Ide/Pads/ProjectPad">
    <NodeBuilder class = "MonoDevelop.FSharp.FSharpProjectFileNodeExtension"/>
  </Extension>

  <Extension path="/MonoDevelop/Ide/Commands">
    <ComplexCondition>
      <Or>
        <Condition id="MSBuildTargetIsAvailable" target="$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.FSharp.Targets" />
        <Condition id="MSBuildTargetIsAvailable" target="$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.1\Framework\v4.0\Microsoft.FSharp.Targets" />
      </Or>
      <Category _name = "F# Integration" id="F# Integration">
        <Command id="MonoDevelop.FSharp.FSharpCommands.ShowFSharpInteractive"
            _label = "F# Interactive"
            type="check"
            _description="Show F# Interactive pad."
            shortcut="Control|Alt|F"
            macShortcut="Meta|Control|F"
            defaultHandler="MonoDevelop.FSharp.ShowFSharpInteractive" />

        <Command id="MonoDevelop.FSharp.FSharpCommands.SendSelection"
            _label = "Send selection to F# Interactive"
            _description="Send the selected text to F# Interactive"
            shortcut="Ctrl|Return"
            macShortcut="Ctrl|Return"
            defaultHandler="MonoDevelop.FSharp.SendSelection" />

        <Command id="MonoDevelop.FSharp.FSharpCommands.SendLine"
            _label = "Send line to F# Interactive"
            _description="Send the current line to F# Interactive"
            shortcut="Ctrl|Alt|L"
            macShortcut="Meta|Control|L"
            defaultHandler="MonoDevelop.FSharp.SendLine" />

        <Command _description="Send the current project references to F# Interactive"
            _label="Send references to F# Interactive"
            defaultHandler="MonoDevelop.FSharp.SendReferences"
            id="MonoDevelop.FSharp.FSharpCommands.SendReferences"
            macShortcut="Meta|Control|P"
            shortcut="Ctrl|Alt|P" />

        <Command _description="Restart F# Interactive"
            _label="Restart F# Interactive"
            defaultHandler="MonoDevelop.FSharp.RestartFsi"
            id="MonoDevelop.FSharp.FSharpCommands.RestartFsi"
            macShortcut="Meta|Control|R"
            shortcut="Ctrl|Alt|R" />

        <Command _description="Clear F# Interactive"
            _label="Clear F# Interactive"
            defaultHandler="MonoDevelop.FSharp.ClearFsi"
            id="MonoDevelop.FSharp.FSharpCommands.ClearFsi"
            macShortcut="Meta|Control|C"
            shortcut="Ctrl|Alt|C" />
      </Category>
    </ComplexCondition>
  </Extension>

  <Extension path = "/MonoDevelop/SourceEditor2/ContextMenu/Editor">
    <ComplexCondition>
      <Or>
        <Condition id="MSBuildTargetIsAvailable" target="$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.FSharp.Targets" />
        <Condition id="MSBuildTargetIsAvailable" target="$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.1\Framework\v4.0\Microsoft.FSharp.Targets" />
      </Or>
      <SeparatorItem id = "FSharpInteractiveStart" />
      <CommandItem id = "MonoDevelop.FSharp.FSharpCommands.SendSelection" />
      <CommandItem id = "MonoDevelop.FSharp.FSharpCommands.SendLine" />
      <CommandItem id = "MonoDevelop.FSharp.FSharpCommands.SendReferences" />
    </ComplexCondition>
  </Extension>

  <Extension path = "/MonoDevelop/Ide/MainMenu/Edit">
    <ComplexCondition>
      <Or>
        <Condition id="MSBuildTargetIsAvailable" target="$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.0\Framework\v4.0\Microsoft.FSharp.Targets" />
        <Condition id="MSBuildTargetIsAvailable" target="$(MSBuildExtensionsPath32)\..\Microsoft SDKs\F#\3.1\Framework\v4.0\Microsoft.FSharp.Targets" />
      </Or>
      <CommandItem id = "MonoDevelop.FSharp.FSharpCommands.SendSelection" />
      <CommandItem id = "MonoDevelop.FSharp.FSharpCommands.SendLine" />
      <CommandItem id = "MonoDevelop.FSharp.FSharpCommands.SendReferences" />
    </ComplexCondition>
  </Extension>

</Addin>
